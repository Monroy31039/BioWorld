library(broom.helpers)   # etiquetas, exponentiate handy
install.packages("broom.helpers")
library(tidyverse)
library(performance)     # diagnóstico y supuestos (easystats)
library(broom)           # tidy/augment/glance
library(broom.helpers)   # etiquetas, exponentiate handy
library(MASS)            # glm.nb
library(DHARMa)          # residuos simulados
set.seed(2025)
# ===========================
# 1) Simulación + limpieza
# ===========================
n <- 300
datos <- tibble(
sexo        = sample(c("Hombre", "Mujer"), n, replace = TRUE),
grupo_edad  = sample(c("Joven", "Media", "Mayor"), n, replace = TRUE),
educacion   = sample(c("Básica", "Media", "Superior"), n, replace = TRUE)
) %>%
mutate(
sexo       = forcats::fct_relevel(factor(sexo), "Hombre"),
grupo_edad = forcats::fct_relevel(factor(grupo_edad), "Joven"),
educacion  = forcats::fct_relevel(factor(educacion), "Básica"),
lambda = exp(
0.7 +
0.3 * (sexo == "Mujer") +
0.5 * (grupo_edad == "Media") +
0.8 * (grupo_edad == "Mayor") +
0.4 * (educacion == "Media") +
0.6 * (educacion == "Superior")
),
conteo = rpois(n, lambda)
)
library(tidyverse)
library(performance)     # diagnóstico y supuestos (easystats)
library(broom)           # tidy/augment/glance
library(broom.helpers)   # etiquetas, exponentiate handy
library(MASS)            # glm.nb
library(DHARMa)          # residuos simulados
set.seed(2025)
# ===========================
# 1) Simulación + limpieza
# ===========================
n <- 300
datos <- tibble(
sexo        = sample(c("Hombre", "Mujer"), n, replace = TRUE),
grupo_edad  = sample(c("Joven", "Media", "Mayor"), n, replace = TRUE),
educacion   = sample(c("Básica", "Media", "Superior"), n, replace = TRUE)
) %>%
mutate(
sexo       = forcats::fct_relevel(factor(sexo), "Hombre"),
grupo_edad = forcats::fct_relevel(factor(grupo_edad), "Joven"),
educacion  = forcats::fct_relevel(factor(educacion), "Básica"),
lambda = exp(
0.7 +
0.3 * (sexo == "Mujer") +
0.5 * (grupo_edad == "Media") +
0.8 * (grupo_edad == "Mayor") +
0.4 * (educacion == "Media") +
0.6 * (educacion == "Superior")
),
conteo = rpois(n, lambda)
)
# ===========================
# 2) Modelos GLM (Poisson / Quasi)
# ===========================
modelo_pois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = poisson(link = "log"),
data = datos
)
modelo_qpois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = quasipoisson(link = "log"),
data = datos
)
# Coeficientes como razones de tasas (RR) con IC
rr_pois <- tidy(modelo_pois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_qpois <- tidy(modelo_qpois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_pois
rr_qpois
# GOF y pseudo-R²
glance(modelo_pois) %>% select(aic, bic, deviance, df.residual)
library(tidyverse)
library(performance)     # diagnóstico y supuestos (easystats)
library(broom)           # tidy/augment/glance
library(broom.helpers)   # etiquetas, exponentiate handy
library(MASS)            # glm.nb
library(DHARMa)          # residuos simulados
library(dplyr)
set.seed(2025)
# ===========================
# 1) Simulación + limpieza
# ===========================
n <- 300
datos <- tibble(
sexo        = sample(c("Hombre", "Mujer"), n, replace = TRUE),
grupo_edad  = sample(c("Joven", "Media", "Mayor"), n, replace = TRUE),
educacion   = sample(c("Básica", "Media", "Superior"), n, replace = TRUE)
) %>%
mutate(
sexo       = forcats::fct_relevel(factor(sexo), "Hombre"),
grupo_edad = forcats::fct_relevel(factor(grupo_edad), "Joven"),
educacion  = forcats::fct_relevel(factor(educacion), "Básica"),
lambda = exp(
0.7 +
0.3 * (sexo == "Mujer") +
0.5 * (grupo_edad == "Media") +
0.8 * (grupo_edad == "Mayor") +
0.4 * (educacion == "Media") +
0.6 * (educacion == "Superior")
),
conteo = rpois(n, lambda)
)
# ===========================
# 2) Modelos GLM (Poisson / Quasi)
# ===========================
modelo_pois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = poisson(link = "log"),
data = datos
)
modelo_qpois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = quasipoisson(link = "log"),
data = datos
)
# Coeficientes como razones de tasas (RR) con IC
rr_pois <- tidy(modelo_pois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_qpois <- tidy(modelo_qpois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_pois
rr_qpois
# GOF y pseudo-R²
glance(modelo_pois) %>% select(aic, bic, deviance, df.residual)
library(tidyverse)
library(performance)     # diagnóstico y supuestos (easystats)
library(broom)           # tidy/augment/glance
library(broom.helpers)   # etiquetas, exponentiate handy
library(MASS)            # glm.nb
library(DHARMa)          # residuos simulados
library(dplyr)
set.seed(2025)
# ===========================
# 1) Simulación + limpieza
# ===========================
n <- 300
datos <- tibble(
sexo        = sample(c("Hombre", "Mujer"), n, replace = TRUE),
grupo_edad  = sample(c("Joven", "Media", "Mayor"), n, replace = TRUE),
educacion   = sample(c("Básica", "Media", "Superior"), n, replace = TRUE)
) %>%
mutate(
sexo       = forcats::fct_relevel(factor(sexo), "Hombre"),
grupo_edad = forcats::fct_relevel(factor(grupo_edad), "Joven"),
educacion  = forcats::fct_relevel(factor(educacion), "Básica"),
lambda = exp(
0.7 +
0.3 * (sexo == "Mujer") +
0.5 * (grupo_edad == "Media") +
0.8 * (grupo_edad == "Mayor") +
0.4 * (educacion == "Media") +
0.6 * (educacion == "Superior")
),
conteo = rpois(n, lambda)
)
# ===========================
# 2) Modelos GLM (Poisson / Quasi)
# ===========================
modelo_pois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = poisson(link = "log"),
data = datos
)
modelo_qpois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = quasipoisson(link = "log"),
data = datos
)
# Coeficientes como razones de tasas (RR) con IC
rr_pois <- tidy(modelo_pois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_qpois <- tidy(modelo_qpois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_pois
rr_qpois
# GOF y pseudo-R²
glance(modelo_pois) %>% select(aic, bic, deviance, df.residual)
glance(modelo_pois) %>% names()
library(tidyverse)
library(performance)     # diagnóstico y supuestos (easystats)
library(broom)           # tidy/augment/glance
library(broom.helpers)   # etiquetas, exponentiate handy
library(MASS)            # glm.nb
library(DHARMa)          # residuos simulados
library(dplyr)
set.seed(2025)
# ===========================
# 1) Simulación + limpieza
# ===========================
n <- 300
datos <- tibble(
sexo        = sample(c("Hombre", "Mujer"), n, replace = TRUE),
grupo_edad  = sample(c("Joven", "Media", "Mayor"), n, replace = TRUE),
educacion   = sample(c("Básica", "Media", "Superior"), n, replace = TRUE)
) %>%
mutate(
sexo       = forcats::fct_relevel(factor(sexo), "Hombre"),
grupo_edad = forcats::fct_relevel(factor(grupo_edad), "Joven"),
educacion  = forcats::fct_relevel(factor(educacion), "Básica"),
lambda = exp(
0.7 +
0.3 * (sexo == "Mujer") +
0.5 * (grupo_edad == "Media") +
0.8 * (grupo_edad == "Mayor") +
0.4 * (educacion == "Media") +
0.6 * (educacion == "Superior")
),
conteo = rpois(n, lambda)
)
# ===========================
# 2) Modelos GLM (Poisson / Quasi)
# ===========================
modelo_pois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = poisson(link = "log"),
data = datos
)
modelo_qpois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = quasipoisson(link = "log"),
data = datos
)
# Coeficientes como razones de tasas (RR) con IC
rr_pois <- tidy(modelo_pois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_qpois <- tidy(modelo_qpois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_pois
rr_qpois
# GOF y pseudo-R²
glance(modelo_pois) %>% select(AIC, BIC, deviance, df.residual)
library(tidyverse)
library(performance)     # diagnóstico y supuestos (easystats)
library(broom)           # tidy/augment/glance
library(broom.helpers)   # etiquetas, exponentiate handy
library(MASS)            # glm.nb
library(DHARMa)          # residuos simulados
library(dplyr)
set.seed(2025)
# ===========================
# 1) Simulación + limpieza
# ===========================
n <- 300
datos <- tibble(
sexo        = sample(c("Hombre", "Mujer"), n, replace = TRUE),
grupo_edad  = sample(c("Joven", "Media", "Mayor"), n, replace = TRUE),
educacion   = sample(c("Básica", "Media", "Superior"), n, replace = TRUE)
) %>%
mutate(
sexo       = forcats::fct_relevel(factor(sexo), "Hombre"),
grupo_edad = forcats::fct_relevel(factor(grupo_edad), "Joven"),
educacion  = forcats::fct_relevel(factor(educacion), "Básica"),
lambda = exp(
0.7 +
0.3 * (sexo == "Mujer") +
0.5 * (grupo_edad == "Media") +
0.8 * (grupo_edad == "Mayor") +
0.4 * (educacion == "Media") +
0.6 * (educacion == "Superior")
),
conteo = rpois(n, lambda)
)
# ===========================
# 2) Modelos GLM (Poisson / Quasi)
# ===========================
modelo_pois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = poisson(link = "log"),
data = datos
)
modelo_qpois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = quasipoisson(link = "log"),
data = datos
)
# Coeficientes como razones de tasas (RR) con IC
rr_pois <- tidy(modelo_pois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_qpois <- tidy(modelo_qpois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_pois
rr_qpois
# GOF y pseudo-R²
glance(modelo_pois) %>%
select(AIC, BIC, deviance, df.residual)
library(tidyverse)
library(performance)     # diagnóstico y supuestos (easystats)
library(broom)           # tidy/augment/glance
library(broom.helpers)   # etiquetas, exponentiate handy
library(MASS)            # glm.nb
library(DHARMa)          # residuos simulados
library(dplyr)
set.seed(2025)
# ===========================
# 1) Simulación + limpieza
# ===========================
n <- 300
datos <- tibble(
sexo        = sample(c("Hombre", "Mujer"), n, replace = TRUE),
grupo_edad  = sample(c("Joven", "Media", "Mayor"), n, replace = TRUE),
educacion   = sample(c("Básica", "Media", "Superior"), n, replace = TRUE)
) %>%
mutate(
sexo       = forcats::fct_relevel(factor(sexo), "Hombre"),
grupo_edad = forcats::fct_relevel(factor(grupo_edad), "Joven"),
educacion  = forcats::fct_relevel(factor(educacion), "Básica"),
lambda = exp(
0.7 +
0.3 * (sexo == "Mujer") +
0.5 * (grupo_edad == "Media") +
0.8 * (grupo_edad == "Mayor") +
0.4 * (educacion == "Media") +
0.6 * (educacion == "Superior")
),
conteo = rpois(n, lambda)
)
# ===========================
# 2) Modelos GLM (Poisson / Quasi)
# ===========================
modelo_pois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = poisson(link = "log"),
data = datos
)
modelo_qpois <- glm(
conteo ~ sexo + grupo_edad + educacion,
family = quasipoisson(link = "log"),
data = datos
)
# Coeficientes como razones de tasas (RR) con IC
rr_pois <- tidy(modelo_pois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_qpois <- tidy(modelo_qpois, conf.int = TRUE, exponentiate = TRUE) %>%
mutate(across(c(estimate, conf.low, conf.high), ~round(.x, 3)))
rr_pois
rr_qpois
# GOF y pseudo-R²
glance(modelo_pois) %>%
dplyr::select(AIC, BIC, deviance, df.residual)
performance::r2(modelo_pois)
# ===========================
# 3) Diagnóstico con performance + gráficos tidy
# ===========================
# Panel general (abre gráfico con varias pestañas)
check_model(modelo_pois)
# Sobredispersión / colinealidad / outliers / ceros
check_overdispersion(modelo_pois)
check_collinearity(modelo_pois)
check_outliers(modelo_pois)
check_zeroinflation(modelo_pois)
# phi (Pearson) “a mano”
phi <- residuals(modelo_pois, type = "pearson") %>% {\(r) sum(r^2) / df.residual(modelo_pois)}()
phi
# Residuos vs ajustados (deviance)
augment(modelo_pois, type.residuals = "deviance") %>%
ggplot(aes(.fitted, .resid)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(alpha = 0.6) +
labs(x = "Ajustados", y = "Residuos de deviance",
title = "Residuos de deviance vs ajustados (Poisson)")
# Cook y leverage (influencia)
aug_inf <- augment(modelo_pois, type.residuals = "deviance") %>%
mutate(id = row_number())
ggplot(aug_inf, aes(id, .cooksd)) +
geom_segment(aes(xend = id, yend = 0)) +
labs(x = "Obs.", y = "Cook's D", title = "Distancia de Cook")
ggplot(aug_inf, aes(id, .hat)) +
geom_segment(aes(xend = id, yend = 0)) +
labs(x = "Obs.", y = "Leverage (hat)", title = "Valores de leverage")
# Residuos simulados con DHARMa (muy útil en conteos)
sim_pois <- simulateResiduals(modelo_pois, plot = TRUE)
testDispersion(sim_pois)
testOutliers(sim_pois)
plotQQunif(sim_pois)
plotResiduals(sim_pois)  # vs predictores si añades 'form = datos$grupo_edad', etc.
View(datos)
# ===========================
# 3) Diagnóstico con performance + gráficos tidy
# ===========================
# Panel general (abre gráfico con varias pestañas)
check_model(modelo_pois)
# Sobredispersión / colinealidad / outliers / ceros
check_overdispersion(modelo_pois)
check_collinearity(modelo_pois)
check_outliers(modelo_pois)
check_zeroinflation(modelo_pois)
# phi (Pearson) “a mano”
phi <- residuals(modelo_pois, type = "pearson") %>% {\(r) sum(r^2) / df.residual(modelo_pois)}()
phi
# Residuos vs ajustados (deviance)
augment(modelo_pois, type.residuals = "deviance") %>%
ggplot(aes(.fitted, .resid)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(alpha = 0.6) +
labs(x = "Ajustados", y = "Residuos de deviance",
title = "Residuos de deviance vs ajustados (Poisson)")
# Cook y leverage (influencia)
aug_inf <- augment(modelo_pois, type.residuals = "deviance") %>%
mutate(id = row_number())
ggplot(aug_inf, aes(id, .cooksd)) +
geom_segment(aes(xend = id, yend = 0)) +
labs(x = "Obs.", y = "Cook's D", title = "Distancia de Cook")
ggplot(aug_inf, aes(id, .hat)) +
geom_segment(aes(xend = id, yend = 0)) +
labs(x = "Obs.", y = "Leverage (hat)", title = "Valores de leverage")
# Residuos simulados con DHARMa (muy útil en conteos)
sim_pois <- simulateResiduals(modelo_pois, plot = TRUE)
testDispersion(sim_pois)
testOutliers(sim_pois)
plotQQunif(sim_pois)
plotResiduals(sim_pois)  # vs predictores si añades 'form = datos$grupo_edad', etc.
# ===========================
# 3) Diagnóstico con performance + gráficos tidy
# ===========================
# Panel general (abre gráfico con varias pestañas)
check_model(modelo_pois)
# Sobredispersión / colinealidad / outliers / ceros
check_overdispersion(modelo_pois)
check_collinearity(modelo_pois)
check_outliers(modelo_pois)
check_zeroinflation(modelo_pois)
# phi (Pearson) “a mano”
phi <- residuals(modelo_pois, type = "pearson") %>% {\(r) sum(r^2) / df.residual(modelo_pois)}()
phi
# Residuos vs ajustados (deviance)
augment(modelo_pois, type.residuals = "deviance") %>%
ggplot(aes(.fitted, .resid)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(alpha = 0.6) +
labs(x = "Ajustados", y = "Residuos de deviance",
title = "Residuos de deviance vs ajustados (Poisson)")
# Cook y leverage (influencia)
aug_inf <- augment(modelo_pois, type.residuals = "deviance") %>%
mutate(id = row_number())
ggplot(aug_inf, aes(id, .cooksd)) +
geom_segment(aes(xend = id, yend = 0)) +
labs(x = "Obs.", y = "Cook's D", title = "Distancia de Cook")
ggplot(aug_inf, aes(id, .hat)) +
geom_segment(aes(xend = id, yend = 0)) +
labs(x = "Obs.", y = "Leverage (hat)", title = "Valores de leverage")
# Residuos simulados con DHARMa (muy útil en conteos)
sim_pois <- simulateResiduals(modelo_pois, plot = TRUE)
testDispersion(sim_pois)
testOutliers(sim_pois)
plotQQunif(sim_pois)
plotResiduals(sim_pois)  # vs predictores si añades 'form = datos$grupo_edad', etc.
# ===========================
# 4) Comparación de errores estándar
# ===========================
se_comp <- tibble(
termino = names(coef(modelo_pois)),
Poisson = sqrt(diag(vcov(modelo_pois))),
QuasiPoisson = sqrt(diag(vcov(modelo_qpois)))
)
se_comp
# ===========================
# 5) Ejemplo warpbreaks con tidy + performance
# ===========================
datos_warp <- as_tibble(warpbreaks) %>%
mutate(
wool    = fct_drop(wool),
tension = fct_drop(tension)
)
mod_warp_pois <- glm(breaks ~ wool + tension,
family = poisson(link = "log"),
data = datos_warp)
mod_warp_qp <- glm(breaks ~ wool + tension,
family = quasipoisson(link = "log"),
data = datos_warp)
mod_warp_nb <- MASS::glm.nb(breaks ~ wool + tension, data = datos_warp)
# Resumen RR
tidy(mod_warp_pois, conf.int = TRUE, exponentiate = TRUE)
tidy(mod_warp_qp,   conf.int = TRUE, exponentiate = TRUE)
tidy(mod_warp_nb,   conf.int = TRUE, exponentiate = TRUE)
View(datos_warp)
# Sobredispersión + panel
check_overdispersion(mod_warp_pois)
check_model(mod_warp_pois)
# AIC (ojo: Quasi no tiene AIC comparable)
AIC(mod_warp_pois, mod_warp_nb)
# Sobredispersión + panel
check_overdispersion(mod_warp_pois)
check_model(mod_warp_pois)
# AIC (ojo: Quasi no tiene AIC comparable)
AIC(mod_warp_pois, mod_warp_nb)
# Comparación de SE
tibble(
termino   = names(coef(mod_warp_pois)),
Poisson   = sqrt(diag(vcov(mod_warp_pois))),
QuasiPois = sqrt(diag(vcov(mod_warp_qp))),
NegBin    = sqrt(diag(vcov(mod_warp_nb)))
)
# Gráfico residuos deviance (tidy)
augment(mod_warp_pois, type.residuals = "deviance") %>%
ggplot(aes(.fitted, .resid)) +
geom_hline(yintercept = 0, linetype = 2) +
geom_point(alpha = 0.7) +
labs(x = "Ajustados", y = "Residuos de deviance",
title = "warpbreaks: Residuos vs ajustados (Poisson)")
