"0","set.seed(123)"
"0",""
"0","pi_values <- seq(0.01, 0.1, by = 0.01)"
"0",""
"0","resultados <- list()"
"0",""
"0","N <- nrow(calle_final_imputado)"
"0",""
"0","# Iteramos por cada valor de pi"
"0","for (pi in pi_values) {"
"0","  "
"0","  # 1. Aplicamos muestreo Bernoulli"
"0","  calle_simulada <- calle_final_imputado %>%"
"0","    mutate(muestra = as.integer(runif(n()) < pi)) %>%"
"0","    filter(muestra == 1)"
"0","  "
"0","  # 2. Tamaño total de muestra"
"0","  n_total <- nrow(calle_simulada)"
"0","  "
"0","  # 3. Tamaño por localidad"
"0","  nh_por_localidad <- calle_simulada %>%"
"0","    count(Localidad, name = ""nh"")"
"0","  "
"0","  nh_barra <- mean(nh_por_localidad$nh)     # Promedio"
"0","  nh_min <- min(nh_por_localidad$nh)        # Mínimo real"
"0","  nh_max <- max(nh_por_localidad$nh)        # Máximo"
"0","  "
"0","  # 4. Estimación por localidad"
"0","  estimaciones_por_localidad <- calle_simulada %>%"
"0","    group_by(Localidad) %>%"
"0","    summarise("
"0","      T_hat_h = sum(Tiempo) / pi,"
"0","      Var_hat_h = (1 / pi) * (1 / pi - 1) * sum(Tiempo^2),"
"0","      nh = n(),"
"0","      .groups = ""drop"""
"0","    ) %>%"
"0","    mutate("
"0","      CV_h = sqrt(Var_hat_h) / T_hat_h"
"0","    )"
"0","  "
"0","  # 5. Estimación global"
"0","  T_hat_total <- sum(estimaciones_por_localidad$T_hat_h)"
"0","  Var_hat_total <- sum(estimaciones_por_localidad$Var_hat_h)"
"0","  mu_hat <- T_hat_total / N"
"0","  Var_mu_hat <- Var_hat_total / N^2"
"0","  CV_global <- sqrt(Var_mu_hat) / mu_hat"
"0","  "
"0","  # 6. CV por localidad"
"0","  CVh_barra <- mean(estimaciones_por_localidad$CV_h)"
"0","  CVh_min <- min(estimaciones_por_localidad$CV_h)"
"0","  CVh_max <- max(estimaciones_por_localidad$CV_h)"
"0",""
"0","  nh_min_presentacion <- ifelse(nh_min == 1, 2, nh_min)"
"0","  "
"0",""
"0","  if (abs(pi - 0.05) < 1e-6) {"
"0","    tabla_localidades <- estimaciones_por_localidad %>%"
"0","      mutate("
"0","        nh = ifelse(nh == 1, 2, nh), "
"0","        CV_h = round(CV_h, 4)"
"0","      ) %>%"
"0","      select(Localidad, nh, CV_h)"
"0","  }"
"0",""
"0","  resultados[[as.character(pi)]] <- data.frame("
"0","    pi = pi,"
"0","    n = n_total,"
"0","    nh_barra = round(nh_barra, 2),"
"0","    nh_min = nh_min_presentacion,"
"0","    nh_max = nh_max,"
"0","    CV = round(CV_global, 4),"
"0","    CVh_barra = round(CVh_barra, 4),"
"0","    CVh_min = round(CVh_min, 4),"
"0","    CVh_max = round(CVh_max, 4)"
"0","  )"
"0","}"
"0",""
"0",""
"0","tabla_resultados <- bind_rows(resultados)"
"0",""
"0","print(tabla_resultados)"
